name: Build then Deploy to Pinata
#max-h-[70vw] overflow-y-scroll run on merge
on:
  push:
    branches:
      - develop_pinata
      - develop
      - master
    tags:
      - v*

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"
          cache: yarn

      # These env variables may only be used in next step
      - name: Set env vars
        shell: bash
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
          TAG_NAME=$(git tag --points-at HEAD)
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "VITE_APP_VERSION=$(cat ./app/package.json | jq '.version' | tr -d '"')" >> $GITHUB_ENV
          echo "VITE_APP_SHA=$GITHUB_SHA" >> $GITHUB_ENV

          if [[ $BRANCH_NAME == 'master' ]]
          then
            echo "SUBDOMAIN=staging" >> $GITHUB_ENV
            echo "VITE_APP_DEPLOYMENT=production" >> $GITHUB_ENV
          elif [[ "$TAG_NAME" != '' ]]
          then
            echo "SUBDOMAIN=testnet" >> $GITHUB_ENV
            echo "VITE_APP_DEPLOYMENT=staging" >> $GITHUB_ENV
          else
            echo "SUBDOMAIN=devnet" >> $GITHUB_ENV
            echo "VITE_APP_DEPLOYMENT=develop" >> $GITHUB_ENV
          fi
          echo $(cat $GITHUB_ENV)

      - name: Build App
        run: yarn install --frozen-lockfile && yarn build --tag $BRANCH_NAME --no-setup

      - name: Deploy App to IPFS/Pinata
        id: pinata
        uses: anantaramdas/ipfs-pinata-deploy-action@v1.6.4
        with:
          pin-name: "Sifchain ${{ github.sha }}"
          path: "./app/dist"
          pinata-api-key: ${{ secrets.PINATA_API_KEY }}
          pinata-secret-api-key: ${{ secrets.PINATA_SECRET_KEY }}
          verbose: true
          remove-old: true

      - name: Set environment for dnslink
        run: |
          echo $SUBDOMAIN

          if [[ $SUBDOMAIN == 'devnet' ]]; then
            echo "Config set for DevNet deployment"
            echo "RECORD_DOMAIN=sifchain.finance" >> $GITHUB_ENV
            echo "RECORD_NAME=_dnslink.devnet" >> $GITHUB_ENV
          fi

          if [[ $SUBDOMAIN == 'testnet' ]]; then
            echo "Config set for TestNet deployment"
            echo "RECORD_DOMAIN=sifchain.finance" >> $GITHUB_ENV
            echo "RECORD_NAME=_dnslink.testnet" >> $GITHUB_ENV
          fi

          if [[ $SUBDOMAIN == 'staging' ]]; then
            echo "Config set for Staging deployment"
            echo "RECORD_DOMAIN=sifchain.finance" >> $GITHUB_ENV
            echo "RECORD_NAME=_dnslink.staging" >> $GITHUB_ENV
          fi

      - name: Update cloudflare DNSLink
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_TOKEN_ZONE_ID }}
        id: dnslink
        uses: textileio/cloudflare-update-dnslink@master
        with:
          cid: ${{ steps.pinata.outputs.hash }}

      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.14.0
        with:
          payload: "{\"pinata_url\":\"${{ steps.pinata.outputs.hash }}\",
          \"branch\":\"${{env.SUBDOMAIN}}\",\"github_hash\": \"${{ github.sha }}\",
          \"sif_url\": \"https://${{env.SUBDOMAIN}}.sifchain.finance\" }"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
