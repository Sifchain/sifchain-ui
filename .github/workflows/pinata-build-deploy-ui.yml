name: Build then Deploy to Pinata
# run run on merge
on:
  push:
    branches:
      - develop
      - testnet
      # - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      # These env variables may only be used in next step
      - name: Set BRANCH_NAME, APP_VERSION
        shell: bash
        run: |
          echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "VUE_APP_VERSION=$(cat ./ui/package.json | jq '.version' | tr -d '"')" >> $GITHUB_ENV

        id: extract_env

      - name: Set ENV_NAME, SUBDOMAIN
        shell: bash
        run: |
          if [[ $BRANCH_NAME == 'master' ]]
          then
            echo "ENV_NAME=mainnet" >> $GITHUB_ENV
            echo "SUBDOMAIN=dex" >> $GITHUB_ENV
          elif [[ $BRANCH_NAME == 'testnet' ]]
          then
            echo "ENV_NAME=testnet" >> $GITHUB_ENV
            echo "SUBDOMAIN=testnet" >> $GITHUB_ENV
          else
            echo "ENV_NAME=devnet" >> $GITHUB_ENV
            echo "SUBDOMAIN=devnet" >> $GITHUB_ENV
            echo "BRANCH_NAME=develop" >> $GITHUB_ENV
          fi

      - name: Set CONTRACT_DEPLOYMENT, SHA
        shell: bash
        run: |
          echo "VUE_APP_SHA=$GITHUB_SHA" >> $GITHUB_ENV
          echo "VUE_APP_CONTRACT_DEPLOYMENT=$(cat ./ui/core/src/config/networks/sifchain/config.${ENV_NAME}.json | jq '.sifChainId' | tr -d '"')" >> $GITHUB_ENV

      - name: Fetch contract, Write to .env
        shell: bash
        run: |     
          wget -P ./smart-contracts/build/contracts https://raw.githubusercontent.com/Sifchain/sifnode/${BRANCH_NAME}/smart-contracts/deployments/${VUE_APP_CONTRACT_DEPLOYMENT}/BridgeBank.json
          echo VUE_APP_VERSION=$VUE_APP_VERSION >> ./ui/app/.env
          echo VUE_APP_SHA=$VUE_APP_SHA >> ./ui/app/.env

      - name: Use Node.js
        uses: actions/setup-node@v2.1.4
        with:
          node-version: "14.x"

      - name: Build App
        run: |
          cd ui && yarn install --frozen-lockfile && yarn build --tag $BRANCH_NAME --no-setup

      # Can't save envs between jobs so using artifacts
      - name: Save package meta
        run: |
          mkdir -p ./ui/app/dist;
          echo $BRANCH_NAME > ./ui/app/dist/.branch; 

      - uses: actions/upload-artifact@master
        with:
          name: fe-build-artifact-${{ github.sha }}
          path: ./ui/app/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@master
        with:
          name: fe-build-artifact-${{ github.sha }}
          path: ./ui/app/dist

      - name: Deploy App to IPFS/Pinata
        id: pinata
        uses: anantaramdas/ipfs-pinata-deploy-action@v1.6.4
        with:
          pin-name: "Sifchain ${{ github.sha }}"
          path: "./ui/app/dist"
          pinata-api-key: ${{ secrets.PINATA_API_KEY }}
          pinata-secret-api-key: ${{ secrets.PINATA_SECRET_KEY }}
          verbose: true
          remove-old: true

  #     - name: Set environment for dnslink
  #       run: |
  #         echo $GITHUB_REF

  #         if [[ $GITHUB_REF == 'refs/heads/develop' ]]; then
  #           echo "Config set for DevNet deployment"
  #           echo "RECORD_DOMAIN=sifchain.finance" >> $GITHUB_ENV
  #           echo "RECORD_NAME=_dnslink.devnet" >> $GITHUB_ENV
  #         fi

  #         if [[ $GITHUB_REF == 'refs/heads/testnet' ]]; then
  #           echo "Config set for TestNet deployment"
  #           echo "RECORD_DOMAIN=sifchain.finance" >> $GITHUB_ENV
  #           echo "RECORD_NAME=_dnslink.testnet" >> $GITHUB_ENV
  #         fi

  #         if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
  #           echo "Config set for MainNet deployment"
  #           echo "RECORD_DOMAIN=sifchain.finance" >> $GITHUB_ENV
  #           echo "RECORD_NAME=_dnslink.dex" >> $GITHUB_ENV
  #         fi

      # - name: Update cloudflare DNSLink
      #   env:
      #     CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
      #     CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_TOKEN_ZONE_ID }}
      #   id: dnslink
      #   uses: textileio/cloudflare-update-dnslink@master
      #   with:
      #     cid: ${{ steps.pinata.outputs.hash }}

      # - name: Send custom JSON data to Slack workflow
      #   id: slack
      #   uses: slackapi/slack-github-action@v1.14.0
      #   with:
      #     payload: "{\"pinata_url\":\"https://sifchain.mypinata.cloud/ipfs/${{ steps.pinata.outputs.hash }}\",
      #     \"branch\":\"${{ steps.extract_env.outputs.env }}\",\"github_hash\": \"${{ github.sha }}\", 
      #     \"sif_url\": \"https://${{ steps.extract_env.outputs.env }}.sifchain.finance\" }"
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
